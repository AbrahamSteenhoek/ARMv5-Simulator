#include "operand2_regshiftimmediate.h"


Operand2_RegShiftImmediate::Operand2_RegShiftImmediate(ushort bits, RegisterBank *regs): Operand2(bits)
{
    // 5 bit field
    shift = Memory::ExtractBits(bits, 7, 11) >> 7;
    shiftType = Memory::ExtractBits(bits, 5, 6) >> 5;
    Rm = Memory::ExtractBits(bits, 0, 3);
    uint valAtRm = regs->get(Rm);
    if(Rm == 15) {
        valAtRm += 4;
    }
    value = BarrelShifter::autoShift(shiftType, valAtRm, shift);

}


/*
 * Method: toString()
 * - returns a formatted QString representing the ARM assembly that the Operand2 makes up
 */ 
QString Operand2_RegShiftImmediate::toString()
{
    // base register
    QString text = QString("%1").arg(RegisterBank::regFormatString(Rm));

    // adding lsl #0 is unnecessary
    if(shift != 0) {
        text.append(", ");
        // shift type
        switch(shiftType) {
        case 0b00:
            text.append("lsl ");
            break;
        case 0b01:
            text.append("lsr ");
            break;
        case 0b10:
            text.append("asr ");
            break;
        case 0b11:
            text.append("ror ");
            break;
        }
        text.append("#");
        // immediate shift value
        text.append(QString::number(shift));
    }
    return text;
}
